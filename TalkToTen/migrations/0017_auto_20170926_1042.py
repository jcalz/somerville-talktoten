# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-09-26 14:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

from django.db import transaction

def make_households(apps, schema_editor):
    Resident = apps.get_model('TalkToTen', 'Resident')
    Household = apps.get_model('TalkToTen', 'Household')
    addr = None
    household = None
    residents = Resident.objects.order_by('resident_address_street','resident_address_house_number','resident_address_house_number_suffix','resident_address_apartment_number').iterator()
    def process_resident():
        nonlocal addr, household
        try:
            resident = next(residents)
        except StopIteration:
            return False
        cur_addr = str(resident.resident_address_house_number)+" "+resident.resident_address_house_number_suffix+" "+resident.resident_address_street+" "+resident.resident_address_apartment_number
        if (cur_addr != addr):
            addr = cur_addr
            household = Household()
            household.street_segment = resident.street_segment
            household.street = resident.resident_address_street
            household.house_number = resident.resident_address_house_number
            household.house_number_suffix = resident.resident_address_house_number_suffix
            household.apartment_number = resident.resident_address_apartment_number
            household.zip_code = resident.resident_address_zip_code
            household.latitude = resident.latitude
            household.longitude = resident.longitude
            household.ward_number = resident.ward_number
            household.precinct_number = resident.precinct_number
            household.save()
        resident.household = household
        resident.save()
        return True

    BATCH_SIZE = 500
    count = 0
    more_data = True
    while more_data:
        with transaction.atomic():
            print('--------------------')
            while more_data:
                count += 1
                if count % 100 == 0:
                    print("migrated ",count)
                more_data = process_resident()
                if (count % BATCH_SIZE) == 1:
                    break

class Migration(migrations.Migration):

    dependencies = [
        ('TalkToTen', '0016_resident_canvass_complete'),
    ]

    operations = [
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_number', models.CharField(blank=True, max_length=30)),
                ('house_number_suffix', models.CharField(blank=True, max_length=30)),
                ('street', models.CharField(blank=True, max_length=255)),
                ('apartment_number', models.CharField(blank=True, max_length=30)),
                ('zip_code', models.CharField(blank=True, max_length=30)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('street_segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='TalkToTen.StreetSegment')),
                ('ward_number', models.PositiveSmallIntegerField(null=True, blank=True)),
                ('precinct_number', models.PositiveSmallIntegerField(null=True, blank=True))
            ],
        ),
        migrations.AddField(
            model_name='resident',
            name='household',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TalkToTen.Household'),
        ),
        migrations.RunPython(make_households),
        migrations.RemoveField(
            model_name='resident',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='longitude',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='resident_address_apartment_number',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='resident_address_house_number',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='resident_address_house_number_suffix',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='resident_address_street',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='resident_address_zip_code',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='street_segment',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='ward_number',
        ),
        migrations.RemoveField(
            model_name='resident',
            name='precinct_number',
        )
    ]
